
Java 新特性 笔记


Lambda 核心

	是什么：
		( ) -> 
		在方法里面传入方法；
	为什么使用：
		Java 没有函数表达，不能直接传入方法；
		只能传入接口，然后用接口的方法或者新建匿名类。
	基本原理：
		省略接口和方法名；
		只留参数列表；
		方法里面的 return 关键字可以省略；
		参数列表里面的对象类型也可以省略；
		
	怎么使用：
		基本语法：参数列表 - > 表达式
		( ) -> 

		
方法引用核心

	是什么：
		：：
		简写 lambda 表达式中已经存在的方法。		
	为什么使用：
		
	基本原理：
		
	怎么使用：


Stream 核心

	是什么：
		高级的 Iterator；
	为什么使用：
		简化对集合的操作；
	基本原理：
		
	怎么使用：
		创建一个 Stream；
		对 Stream 进行操作和变换 (延迟操作)；
		通过 Stream 得到一个结果 (迫切操作和执行延迟操作) ；
			stream.filter(x -> x>5).filter(x -> x<8).collect(toList());


Java 新特性

	Java 5 新特性：
		for-each ；
		自动装箱、拆箱、缓存设计；
		泛型；
		枚举；
		方法的可变参数；
		静态引入 (static import)；
		String 的工具类 StringUtil
	
	Java 7 新特性 (过渡性版本) ：
		泛型的菱形语法：List<String> list = new ArrayList< > ()；
		同时捕获多个异常处理；
		Object 类，ThreadLocalRandom 类；
		switch 语句支持 String 变量：
			就是 hashCode 方法，
			Switch 支持 byte，short，char，int 以及对象的包装类。
			枚举 (ordinal 方法) 
			String (hashCode 方法，返回的是 int 类型) 
		二进制数字表达式；
		使用下划线对数值进行分割表达 (编译级别的特性)；
		堆污染和 @SafeVarargs，抑制堆污染警告的标签；
		增强 throw 语句；
		try-with-resources 语句；
		NIO2 介绍 (Files，Path，Paths)。

	Java 8 新特性：
		lambda 表达式；
		方法引用；
		stream 流特性。




