

Spring Cloud 笔记



Spring Cloud 核心

	是什么：
		
	为什么使用：
		
	基本原理：
		服务提供者；
		服务消费者；
		RESTful 协议；
		
		
	怎么使用：
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	核心组件：
		
		Eraka：注册；Netflix
			基于 RESTful 的服务，
			用于定位服务，以实现云端中间层服务发现和故障转移。
			
		Feign：；
			声明式、模板化的HTTP客户端；
			提供 RESTful 调用；
		
		
		Ribbon：负载均衡；Netflix
			有多种负载均衡策略可供选择，可配合服务发现和断路器使用。

			
		Hystrix：熔断；
			熔断器，容错管理工具；
			旨在通过熔断机制控制服务和第三方库的节点，
			从而对延迟和故障提供更强大的容错能力。
			
		
			
		Zuul：路由；
			提供动态路由，监控，弹性，安全等边缘服务的框架。
			Zuul 相当于是设备和 Netflix 流应用的 Web 网站后端所有请求的前门。
		
		Config：配置中心；
			配置管理工具包；
			可以把配置放到远程服务器，集中化管理集群配置，
			目前支持本地存储、Git以及Subversion。
			
		Bus：消息；
			事件、消息总线；
			用于在集群（例如，配置变化事件）中传播状态变化，
			可与Spring Cloud Config联合实现热部署。
		
		Sleuth：追踪；
			日志收集工具包，封装了 Dapper 和 log-based 追踪以及 Zipkin 和 HTrace 操作，
			为 SpringCloud 应用实现了一种分布式追踪解决方案。
		
		
		
		
	分布式历史：
		
		RPC：
			RMI：远程方法调用；
			EJB：企业标准对象；
			SOA：服务化；
			Web service：
			微服务；
		
		
		
		
	配置：
		无状态 session
			HTTP 本身没有状态；
			cookie 和 session 提供状态支持。
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		