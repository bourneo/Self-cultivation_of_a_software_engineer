@startmindmap

+[#OrangeRed] Java

++[#yellow] 基础部分

+++[#Pink] 数据

++++[#MediumSpringGreen] 基本数据类型

+++++[#LightGreen]_ byte / 字节
++++++_ 1 字节
+++++[#LightGreen]_ short / 短整数
++++++_ 2 字节
+++++[#LightGreen]_ int / 长整数
++++++_ 4 字节
++++++[#LightGreen]_ int 和 Integer
+++++++_ 类型
+++++++_ 实例化
+++++++_ 默认值
+++++++_ 存储方式
+++++[#LightGreen]_ long / 长整数
++++++_ 8 字节
+++++[#LightGreen]_ float / 单精度
++++++_ 4 字节
+++++[#LightGreen]_ double / 双精度
++++++_ 8 字节
+++++[#LightGreen]_ char / 字符
++++++_ 2 字节
+++++[#LightGreen]_ boolean / 布尔值
++++++_ 1/8 字节

++++[#MediumSpringGreen] 数组

+++++[#LightGreen] 原理
++++++[#LightBlue]_ 一种特殊类型，不同于普通对象。不是类，没有对应的 Class 文件
++++++[#LightBlue]_ 不是通过类加载器创建，而是由 JVM 直接在内存中动态构造出来

+++++[#LightGreen] 实现
++++++[#LightBlue]_ 编译器识别出对数组类型的 length 的访问，生成对应的字节码
++++++[#LightBlue]_ 获取数组长度是 JVM 用 arraylength 这个专用字节码指令

++++[#MediumSpringGreen] 数据结构

+++++[#LightGreen] Collection
++++++[#LightBlue] List
+++++++[#MediumSpringGreen] LinkedList
++++++++[#MediumSpringGreen]_ 底层是链表
+++++++[#MediumSpringGreen] ArrayList
++++++++[#MediumSpringGreen]_ 底层是数组，动态的 Object []
++++++++[#MediumSpringGreen]_ CopyOnWriteArrayList 才能保证线程安全（适合多写少读）

++++++[#LightBlue] Set
+++++++[#MediumSpringGreen] HashSet
++++++++[#MediumSpringGreen]_ 底层是 HashMap，返回 keys
+++++++[#MediumSpringGreen] TreeSet

++++++[#LightBlue] Queue
+++++++[#MediumSpringGreen] PriorityQueue
++++++++[#MediumSpringGreen]_ 底层是堆

+++++[#LightGreen] Map
++++++[#MediumSpringGreen] HashMap
+++++++[#MediumSpringGreen]_ 底层是数组、链表 / 红黑树
++++++[#MediumSpringGreen] ConcurrentHashMap
+++++++[#MediumSpringGreen]_ 在 HashMap 的基础上，加入分段锁，解决线程安全和性能问题
++++++[#MediumSpringGreen] TreeMap


+++[#Pink] 对象

++++[#MediumSpringGreen] 对象拷贝
+++++[#LightGreen] 深拷贝
+++++[#LightGreen] 浅拷贝

++++[#MediumSpringGreen] 对象初始化
+++++[#LightGreen] 父类实例变量和代码块
+++++[#LightGreen] 父类构造器
+++++[#LightGreen] 子类实例变量和代码块
+++++[#LightGreen] 子类构造器
+++++[#LightGreen]_ 如果类还没有被初始化，应先初始化类，再初始化实例

++++[#MediumSpringGreen] 类初始化
+++++[#LightGreen] 静态的（变量，方法，代码块）会被执行
+++++[#LightGreen]_ 类加载的时候执行一次

++++[#MediumSpringGreen] 对象的创建过程（五）
+++++[#LightGreen] 类加载检查：首先检查是否被加载，加载未加载的对象
+++++[#LightGreen] 分配内存空间
+++++[#LightGreen] 初始化零值
+++++[#LightGreen] 设置对象头
+++++[#LightGreen] init 方法来做初始化操作



+++[#Pink] JDK 7、JDK 8

++++[#MediumSpringGreen] 集合框架
+++++[#LightGreen] HashMap
+++++[#LightGreen] ConcurrentHashMap








'https://juejin.cn/post/6995088510134779912
'https://www.jianshu.com/p/562c4c883459
'https://www.jianshu.com/p/ecc6d3ac100d


@endmindmap