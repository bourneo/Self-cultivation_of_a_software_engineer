

DTO 使用的场合及好处




	在传统的编程中，我们一般都是前台请求数据，发送到 Webservice，
	然后 WebService 向数据库发出请求，获取数据，然后一层层返回；

	这种比较原始的请求方式带来的缺点有很多，多次 请求耗费一定的网络资源，减慢效率。
	如果一次性返回整个实体类，还可能造成数据库表结构的泄漏。


	DTO 好处：

		1. 依据现有的类代码，即可方便的构造出 DTO 对象，而无需重新进行分析。

		2. 减少请求次数，大大提高效率。

		3. 按需组织 DTO 对象，页面需要的字段我才组织，不需要的我不组织，可以避免传输整个表的字段，一定程度上提高了安全性。

	通过以上三点，可以看出 DTO 的设计应该具备这几个特点：

		1. 按需放入字段。

		2. 保证贫血模型，不要放任何逻辑在里面




DAO 和 DTO

	DAO：
		data access object 数据访问对象
		主要用来封装对数据库的访问。
		通过它可以把 POJO 持久化为 PO，用 PO 组装出来 VO、DTO 

	DTO ：
		Data Transfer Object 数据传输对象
		主要用于远程调用等需要大量传输对象的地方。
		比如我们一张表有 100 个字段，那么对应的 PO 就有 100 个属性。
		但是我们界面上只要显示 10 个字段，
		客户端用 WEB service 来获取数据，没有必要把整个 PO 对象传递到客户端，
		可以用只有这 10 个属性的 DTO 来传递结果到客户端，这样也不会暴露服务端表结构。
		到达客户端以后，如果用这个对象来对应界面显示，那此时它的身份就转为 VO。

















