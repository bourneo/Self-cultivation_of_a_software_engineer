		
		
		
		
		
生成随机 token
		
		
		
	public String makeToken(){
        String token = (System.currentTimeMillis() + new Random().nextInt(999999999)) + "";
        //数据指纹   128位长   16个字节  md5
        try {
            MessageDigest md = MessageDigest.getInstance("md5");
            byte md5[] =  md.digest(token.getBytes());
            //base64编码--任意二进制编码明文字符   adfsdfsdfsf
            BASE64Encoder encoder = new BASE64Encoder();
            return encoder.encode(md5);
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

		
		
		
		
		
		
		
	public String createTKN(String account,String pin,String imei){
         SaveToDb st = new SaveToDb();
         // 创建 GUID 对象
          UUID uuid = UUID.randomUUID();
          // 得到对象产生的ID
          String token = uuid.toString();
          // 转换为大写
          token = token.toUpperCase();
          // 替换 “-”变成空格
          token = token.replaceAll("-", "");
          System.out.println(token);
          //向数据库中保存token及用户信息
          Map<String , Object> params = new HashMap<>();
          params.put("st_sid", token);
          params.put("st_account", account);
          String tableName = "表名";
          //此处用的是mybaits的方法来保存数据到数据库，具体可看http://blog.csdn.net/suresand/article/details/52540684
          st.save(tableName , params);
          //保存后下次就可以通过用户的token在数据库来做个验证
          return "token";
    }
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		