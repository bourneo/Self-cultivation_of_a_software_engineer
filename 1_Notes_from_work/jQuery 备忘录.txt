
jQuery 工作笔记






jQuery 实用：
	
	
	
	Ajax 请求中调用外部函数：
		async:true,
		beforeSend:function(){
			getInfo();
		},
		complete:function(){
			getInfo();
		}
		
	
	Ajax 请求中的 async：
		
		async: false, (默认是 true) ;
		false 为同步，这个 testAsync() 方法中的 Ajax 请求将整个浏览器锁死，
		只有 Ajax 函数执行结束后，才可以执行其它操作。

		当 async: true 时，ajax 请求是异步的。
		但是其中有个问题：testAsync() 中的 ajax 请求和其后面的操作是异步执行的，
		那么当 Ajax 还未执行完，就可能已经执行了 ajax 请求后面的操作，
	
	
	
	
	jQuery 的 post 请求方式：

		$.post("../public/getRecommendGoodsCategory.do", { goodsTypeId: goodsTypeId },
			function(data){
				var groupList = data.groupList;
				var parentHtml = '<div style="padding-top: 35px;"><ul class="cat_list seach_list clearfix" style="float:right;padding-top:0px;background-color:#FFF;">';
				if (groupList != null && groupList.length > 0) {
					for (var i = 0; i < groupList.length; i++) {
						var cHtml = '<li name="jd"><div class="box"><div class="bg"></div><div class="see-img"><img src=' + groupList[i].goodsImage + '></div><div class="see-info"><h4>' + groupList[i].goodsName + '</h4><h5>已售' + groupList[i].saleNum + '件</h5><p class="price clearfix"><span style="font-size:16px;color:red;">￥' + groupList[i].validPrice + '</span>' +
							'<label class="fl-r">' +
							'<span class="shopping_cart" onclick="toAddShoppingCart(' + groupList[i].goodsId + ')"></span>' +
							'<span class="storage_img" onclick="addTCloudStoreInfo(' + groupList[i].goodsId + ')"></span>' +
							'</label>'
						'</p></div></div></li>';
						parentHtml += cHtml;
					}
				}
				parentHtml +=
					'</ul></div><li class="botton-to-fill" id="purchase" style="width: 25%;color:#FFA540;" onclick="openUrl(\'purchase.html\')">&nbsp</li>'
				$("#contentDiv").append(parentHtml);
				var width = ($("body").width() - 44) / 2;
				$("#contentDiv img").height(width);
				$("#contentDiv img").lazyload({threshold: 200});
				$('#item_select_sku_count1').hide();
			}
		);





jQuery 基础：
	
	
	去掉字符串前后空格：
		$.trim(str);
		
	获取输入框的值：
		var value = $("#").val();
		var value = $("#").attr("value")；

	设置输入框的值：
		$("#").attr("value",value);
		
		
	
	
	jQuery 操作 input 值的各种方法：

		获取选中的值：
			
			获取一组 radio 被选中项的值

				var item = $('input[@name=items][@checked]').val();

			获取 select 被选中项的文本

				var item = $("select[@name=items] option[@selected]").text();

			select 下拉框的第二个元素为当前选中值

				$('#select_id')[0].selectedIndex = 1;

			radio 单选组的第二个元素为当前选中值

				$('input[@name=items]').get(1).checked = true;

			
		获取值：
			
			文本框，文本区域：

				$("#txt").attr("value")；
				$("#txt").val();


			多选框 checkbox：

				$("#checkbox_id").attr("value")；

			单选组 radio：

				$("input[@type=radio][@checked]").val();

			下拉框 select：
				
				$('#sel').val();

			控制表单元素：
			文本框，文本区域：

				$("#txt").attr("value",'');//清空内容
				$("#txt").attr("value",'11');//填充内容

			多选框 checkbox： 

				$("#chk1").attr("checked",'');//不打勾
				$("#chk2").attr("checked",true);//打勾
				if($("#chk1").attr('checked')==undefined) //判断是否已经打勾

			单选组 radio：、

				$("input[@type=radio]").attr("checked",'2');//设置 value=2 的项目为当前选中项

			下拉框 select：

				$("#sel").attr("value",'-sel3');//设置 value=-sel3 的项目为当前选中项
				$("<optionvalue='1'>1111</option><optionvalue='2'> 2222</option>").appendTo("#sel")//添加下拉框的 option
				$("#sel").empty()；//清空下拉框
			





	jquery 获取 input 表单值的代码：

		jquery 取 radio 单选按钮的值
		$("input[name='items']:checked").val();
		jquery radio 取值，checkbox 取值，select 取值，radio 选中，checkbox 选中，select 选中，及其相关 

		获取一组 radio 被选中项的值 
		var item = $('input[name=items][checked]').val(); 

		获取 select 被选中项的文本 
		var item = $("select[name=items] option[selected]").text(); 

		select 下拉框的第二个元素为当前选中值 
		$('#select_id')[0].selectedIndex = 1; 

		radio 单选组的第二个元素为当前选中值 
		$('input[name=items]').get(1).checked = true; 

		获取值： 

			文本框，文本区域：$("#txt").attr("value")； 
			多选框 checkbox：$("#checkbox_id").attr("value")； 
			单选组 radio： $("input[type=radio][checked]").val(); 
			下拉框 select： $('#sel').val(); 

		控制表单元素： 
			文本框，文本区域：$("#txt").attr("value",'');//清空内容 
			$("#txt").attr("value",'11');//填充内容 

		多选框 checkbox： 
			$("#chk1").attr("checked",'');//不打勾 
			$("#chk2").attr("checked",true);//打勾 
			if($("#chk1").attr('checked')==undefined) //判断是否已经打勾 

		单选组 radio： 
			$("input[type=radio]").attr("checked",'2');//设置 value=2 的项目为当前选中项 、
		
		下拉框 select： 
			$("#sel").attr("value",'-sel3');//设置 value=-sel3 的项目为当前选中项 
			$("<option value='1'>1111</option><option value='2'>2222</option>").appendTo("#sel")//添加下拉框的 option 
			$("#sel").empty()；//清空下拉框 


		用 $("#id") 来获得页面的 input 元素, 
			$("#id").value 不能取到值；
				$("#id") 相当于 document.getElementById("element")；
				但是，$("") 获取的是一个 jQuery 对象, 而不是一个 dom element 对象；
				value 是 dom element 对象的属性；
					val():获得第一个匹配元素的当前值。
					val(val):设置每一个匹配元素的值。
				所以, 使用 $("#id").value 不能取到值。
		取值的方法如下: 
			取值：
				val = $("#id")[0].value; 
				$("#id")[0].value = "new value"; 
			赋值： 
				$("#id")[0].value = "new value";
				$("#id").val("new value"); 
				val = $("#id").attr("value");
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

jQuery 笔记


jQuery 核心
	是什么：
		轻量的开源 js 库；简化 HTML 和 JavaScript 之间的操作；
	为什么使用：
		文档全面；插件丰富；跨主流浏览器。
	基本原理：
		封装了 JavaScript 的部分内容。
	怎么使用：
		导入 jQuery 库；
		<head> 标签中导入 jQuery.js 文件；
		调用 jQuery 的 API；
			也允许使用 js 语法。
		js 对象：
			innerHTML
			value
			removeChild()
			appendChild()
		jQuery 对象：
			html()
			val()
			remove()
			append()








		
		
		
		
		
		
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

jquery input text radio check select 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<script src="jquery-starterkit/lib/jquery-1.3.2.min.js" type="text/javascript"></script>

</head>

<body>
<input type="text" id="dd" name="dd" value="dds"/>dd

<input name="rr" id="rr" type="radio" value="34" />ff
<input name="rr" id="rr2" type="radio" value="4" />55

<input name="ff" type="checkbox" value="aa" />jgdg
<input name="ff" type="checkbox" value="gd" />jgdg

<select name="ss" id="ss" size="1">
<option value=""></option>
<option value="8">d</option>
<option value="2">g</option>
</select>

<br/>
<input type="button" id="button" value="按钮一" />
<input type="button" id="jj" value="按钮二" />
<br/>

<div id="ssd">fgfooHello</div>

</body>

<script language="javascript" type="text/javascript">
<!--
$(function(){
$("#button").click(function(){


//获取值
//alert( $('#dd').val());//type=text
// alert($('input[name=rr][checked]').val());//type=radio
// alert($('input[name=ff][checked]').val());//type=checkbox
// alert($("select[name=ss] option[selected]").val());//select 相等于 alert($("#ss option[selected]").val());

//获取文本
//alert($("select[name=ss] option[selected]").text());//select


//控制
/*// Disable #dd 禁用
$("#dd").attr("disabled","disabled");
// Enable #dd 解禁
$("#jj").removeAttr("disabled");*/


// $('input[name=rr]').get(0).checked = true;//第一个 radio 被选中
//alert($("input[type=radio][value=34]").attr("checked",'checked'));//value=34 的 radio 被选中

//alert($("input[type=checkbox][value=gd]").attr("checked",'checked'));//value=gd 的 checkbox 被选中
//$('input[name=ff]').get(1).checked = true;//第一个 check 被选中

 

/*//根据 option 的 text 选中 option
count=$("#ss").find("option").length;
for(var i=0;i<count;i++) 
{ 
if($("#ss").get(0).options[i].text == 'd') 
{ 
$("#ss").get(0).options[i].selected = true;

break; 
} 
} */

//$("<option value='1'>1111</option><option value='25'>22s22</option>").appendTo("#ss");//增加 option
//$("#ss option[value=8]").remove("");//除去 <option value='8'>d</option>

//$("#ss").attr("value",'2');//选中 option 
//$('#ss')[0].selectedIndex = 1;//选中 option

//$("#ss").empty();//清空全部 option

/*//替换文本
var $thirdLink = $("#ssd");
var linkText = $thirdLink.text().replace('foo','bar');
$thirdLink.text(linkText); */

}); 
});
-->
</script>
</html> 





