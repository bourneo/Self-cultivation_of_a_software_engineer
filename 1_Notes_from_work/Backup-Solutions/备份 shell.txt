




jenkins 远程部署使用 shell 脚本进行备份:
完整脚本：

#!/bin/bash
export PATH=~/gogoal_platform/ggopenapi:~/play-1.2.7:$PATH
echo "构建后的路径 pwd:"`pwd`
whoami
cd /home/developer/gogoal_platform/ggopenapi/
cur=$(pwd)
currday=`date +%Y%m%d`
# 打包的文件名
fileName="api"

# 创建最新的备份包
gogalwebfile=${cur}/${fileName}-$currday
if [ ! -d $gogalwebfile ]; then
echo "不存在":$gogalwebfile
cp -r ${fileName} ${fileName}-$currday
fi

backup=`ls -lt | find . -name "${fileName}-*" | sort -r | head -n 3|xargs|sed "s/.\///g"|xargs|sed "s/ /\\\\\\|/g"`
echo "保留最近三个备份包:" \"$backup\"
echo "删除的备份包:"`ls | grep "^${fileName}-.*" | grep -v $backup`
# 删除备份包
rm -rf `ls | grep "^${fileName}-.*" | grep -v $backup | xargs | sed "s/ / /g"`

# 将分批打包的 jar 拷贝到 ggservice 项目中
cp -r package/* /home/developer/gogoal_platform/ggopenapi/api/ggservice/
rm -rf package

cd /home/developer/gogoal_platform/ggopenapi/api/ggservice/

cp /dev/null nohup.out
nohup ./ggservice.sh


命令如下：

#!/bin/bash
export PATH=~/play-1.2.7:$PATH
# 获得当前目录
cur=$(pwd)
echo "pwd:"${cur}
rm -rf ggservice-dataservice.jar
output_path=${cur}/classes
package=${cur}/package
echo $output_path
if [ ! -d $output_path ]; then
 mkdir $output_path
fi

if [ ! -d $package ]; then
 mkdir $package
fi

## 获取依赖库和需要编译的 java 文件
export libs=`find ./dataservice/lib -name "*.jar" |xargs|sed "s/ /:/g"`
export javafiles=`find ./dataservice/ -name "*.java" |xargs|sed "s/ / /g"`
export javautils=`find ./utils/app/ -name "*.java" |xargs|sed "s/ / /g"`
export play_lib=/opt/play-1.2.7/framework/play-1.2.7.jar
export play_lib_common=`find /opt/play-1.2.7/framework/lib/ -name "*.jar" |xargs|sed "s/ /:/g"`
#echo ${javafiles}
#echo "公共---------"
#echo ${javautils}

# 清除
rm -rf package/*
# 清除编译后的 class 文件
rm -rf ${output_path}/*

## 编译
javac -d ${cur}/classes -cp ${libs}:$play_lib:$play_lib_common -encoding utf-8 ${javafiles} ${javautils}
## 打包
cd /home/jenkins/workspace/ggservice/dataservice/app/ggservice/v1/
dir=$(ls -l |awk '/^d/ {print $NF}')
cd $output_path
for i in $dir
do
 echo "ggservice-"${i}".jar 打包情况"：
 jar -cvf ${package}/ggservice-${i}.jar */v1/$i/*
done






jenkins 部署服务脚本:

echo "以时间定义文件夹名"
filedir="bole-`date +%Y%m%d%H%M`"
mkdir /opt/jenkins/target/bole/$filedir

filename="bole-`date +%Y%m%d%H%M%S`.war"
mv bole-control/target/*.war /opt/jenkins/target/bole/$filedir/$filename
mv script/bole.sql /opt/jenkins/target/bole/$filedir
echo "当前 war 版本为:$filename" >>/opt/jenkins/target/bole/$filedir/releaseNotes.txt

echo "获取并移动最新 sql 语句"
cd script
newSql=$(ls -rt *.sql | tail -1)
mv $newSql /opt/jenkins/target/bole/$filedir

echo "获取并移动最新接口文档"
cd ../doc 
newDoc=$(ls -rt *.docx | tail -1)
mv $newDoc /opt/jenkins/target/bole/$filedir



jenkins 自动部署脚本 自动启停 tomcat 并部署项目:

jenkins 自动部署脚本备份：自动启停 tomcat 清空缓存 部署 war 包

export ENV=DEV
export JAVA_HOME=/usr/local/jdk1.6.0_45
export DEPLOYMENT_HOME=/root/toDeploy/userportal
export USERPORTAL_HOME=/usr/local/apache-tomcat-userportal
export DATASERVER_HOME=/usr/local/apache-tomcat-dataserver
 
echo "[Deploy] Shutting down Userportal"
if [ `ps auxwwww|grep tomcat-userportal|grep -v grep|wc -l` -gt 0 ]
then
for pid in `ps auxwww|grep tomcat-userportal|grep -v grep|tr -s ' '|cut -d ' ' -f2`
do
kill -9 $pid 2>&1 > /dev/null
done
fi
 
echo "[Deploy] Shutting down Dataserver"
if [ `ps auxwwww|grep tomcat-dataserver|grep -v grep|wc -l` -gt 0 ]
then
for pid in `ps auxwww|grep tomcat-dataserver|grep -v grep|tr -s ' '|cut -d ' ' -f2`
do
kill -9 $pid 2>&1 > /dev/null
done
fi
 
echo "[Deploy] Cleaning cache for Userportal"
rm -rf $USERPORTAL_HOME/work/Catalina/localhost/*
echo "[Deploy] Removing Userportal.war"
rm -rf $USERPORTAL_HOME/webapps/*
 
echo "[Deploy] Cleaning cache for Dataserver"
rm -rf $DATASERVER_HOME/work/Catalina/localhost/*
echo "[Deploy] Removing Dataserver.war"
rm -rf $DATASERVER_HOME/webapps/*
 
echo "[Deploy] Copying new Dataserver.war"
cp $DEPLOYMENT_HOME/iss-dataserver/target/Dataserver.war $DATASERVER_HOME/webapps/
echo "[Deploy] Copying new Userportal.war"
cp $DEPLOYMENT_HOME/iss-userportal/target/Userportal.war $USERPORTAL_HOME/webapps/
 
echo "[Deploy] Starting up Dataserver"
$DATASERVER_HOME/bin/startup.sh
 
echo "[Deploy] Starting up Userportal"
$USERPORTAL_HOME/bin/startup.sh










